Just the basics for moderation, from a previous version. Abstracted to bot
class you can do with what you want whenever.

install as gem, use Modbot::ModBot.new instance

Pass in: 

Moderator:

  As a hash: { 'name' => '', 'password' => ''}

Subreddits:

  As an array of arrays: [ [subreddit, 10, 10, 10], [subreddit, 1, 20, 5] ]
  Numbers are limts for reports, spam, and submissions respectively

Conditions:

  As an array of array:

    Each condition is an array -> [ subject, attribute, query, item to query, action]

      subject -> :submitted_link, :comment
      attribute -> :author, :title, :domain, :url, :self_post, :min_account_age, :min_link_karma, :min_comment_karma, :min_combined_karma]
      query -> :matches, :contains, :is_less_than, :is_greater_than
      what -> your words, phrase, or number
      action -> :approve, :remove, :alert 

      e.g.
      [:comment, :author, :contains, "AnnoyingPest", :remove],  
      [:comment, :body, :contains, "order bunch taboo words in no", :remove],
      [:comment, :min_comment_karma, :is_less_than, 100, :remove],
      [:submitted_link, :author, :contains, "AnnoyingPest", :remove],
      [:submitted_link, :title, :contains, "", :remove],
      [:submitted_link, :domain, :matches, "imgur.com", :remove]
      [:submitted_link, :url, :contains, "youtube", :remove],
      [:submitted_link, :min_comment_karma, :is_less_than, 100, :remove],
      [:submitted_link, :min_account_age, :contains, 365, :remove]

TODO:

  everything is sort of bits and pieces atm 

  tests and testing

  rate limit agent to once per second (or more even)

  #read everything from a config file sort of implemented
   #intialialize from config file (via passed param of where) or pass into class instance

  #get conditions working and exact

  #future: modularize wrappers, to say use a modbot for a specific api, decouple from reddit and allow numerous moderation types
