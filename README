Just the basics for moderation, from a previous version. Abstracted to bot
class you can do with what you want whenever, removing db and web based
interaction concerns to your preferred solution.

Use
---

Install as gem in your system or project

Use Modbot::ModBot.new instance passing in moderator, subreddits, and conditions 
OR specify a yaml config file to be read (reads from root of project or irb/pry 
instance -- still needs tweaking)

    Modbot::ModBot.new(:config_file)

    Modbot::ModBot.new(:pass_param,
                       moderator = {'name' => '', 'password' => ''},
                       subreddits = [[], [], []]
                       conditions = [ [], [], []])
Moderator

  As a hash { 'name' => '', 'password' => ''}, or see config file example.

Subreddits

- As an array of arrays [ [subreddit, 10, 10, 10], [subreddit, 1, 20, 5] ] or 
see config file example.

- Numbers are limits for reports, spam, and submissions respectively

Conditions

  As an array of arrays containing strings, or see sonfig file example.

      Each condition is an array:
      [subject, attribute, query, item to query, action]
      ---------------------------------------------------------------------------------
      subject: submitted_link, comment
      attribute: author, title, domain, url(avoid this atm), self_post, min_account_age, min_link_karma, min_comment_karma, min_combined_karma]
      query: matches (complete phrase), contains (matches each word), is_less_than, is_greater_than
      what: your words, phrase, or number
      action: approve, remove, alert 

      e.g. add your own quotes, format as you need, i.e. all strings
      [comment, author, contains, "AnnoyingPest", remove],  
      [comment, body, contains, "order bunch taboo words in no", remove],
      [comment, min_comment_karma, is_less_than, 100, remove],
      [submitted_link, author, contains, "AnnoyingPest", remove],
      [submitted_link, title, contains, "", remove],
      [submitted_link, domain, matches, "imgur.com", remove]
      [submitted_link, url, contains, "youtube", remove],
      [submitted_link, min_comment_karma, is_less_than, 100, remove],
      [submitted_link, min_account_age, is_greater_than, 365, remove]

TODO

everything is sort of bits and pieces atm 

tests and testing

regular actions, refine what it is supposed to do exactly(check reddit mod queues and respond appropriately)

refined condition testing options

Added

  0.0.3

     - tossed stuff around, tuned and tweaked

  0.0.2
    
    - rate limit instance agent to once per second with simple Proc

    - config file sort of implemented
      intialialize from config file (via passed param of where) or pass into class instance

Think about:

  - wrappers modularization, e.g. use a modbot instance for a specific api, decouple from reddit and allow numerous api types
